line-length = 100
target-version = "py313"

exclude = [
  ".git", ".venv", "venv", "__pycache__", ".mypy_cache", ".pytest_cache",
  "build", "dist", "node_modules",
  # статика фронта (если есть)
  "static", "web_picker/static",
]

[format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 100

[lint]
# Жёсткое, но адекватное покрытие для продакшена
select = [
  "E", "W",          # pycodestyle
  "F",               # pyflakes
  "UP",              # pyupgrade
  "N",               # pep8-naming
  "D",               # pydocstyle (докстринги обязательны)
  "ANN",             # flake8-annotations (аннотации обязательны)
  "I",               # isort (упорядочивание импортов)
  "B",               # flake8-bugbear
  "C4",              # flake8-comprehensions
  "ARG",             # flake8-unused-arguments
  "T20",             # flake8-print (запрещаем print в проде)
  "Q",               # flake8-quotes
  "COM",             # flake8-commas
  "DTZ",             # flake8-datetimez (таймзоны)
  "G",               # flake8-logging-format
  "PIE",             # flake8-pie
  "PTH",             # flake8-use-pathlib
  "RSE",             # flake8-raise
  "RET",             # flake8-return
  "TCH",             # flake8-type-checking
  "FBT",             # flake8-boolean-trap
  "EM",              # flake8-errmsg
  "A",               # flake8-builtins
  "S",               # flake8-bandit (security, базовые проверки)
  "PERF",            # perflint
  "ASYNC",           # flake8-async
  "C90",             # mccabe (цикломатическая сложность)
  "PL",              # подмножество pylint-правил
  "RUF",             # дополнительные правила Ruff
]
ignore = [
  "D203", "D213",         # конфликтующие правила расположения докстринга
  "D104",                 # докстринг для __init__.py не обязателен
  "ANN101", "ANN102",     # не требуем тип у self/cls
  "B904",
  "D100",
  "RUF002",
]
fixable = ["ALL"]

[lint.pydocstyle]
# Хочешь NumPy-стиль — поменяй на "numpy"
convention = "google"

[lint.mccabe]
max-complexity = 10

[lint.pyupgrade]
keep-runtime-typing = true

[lint.isort]
combine-as-imports = true
known-first-party = ["bot", "web_picker"]

[lint.flake8-annotations]
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true
allow-star-arg-any = false
ignore-fully-untyped = false

[lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[lint.per-file-ignores]
"tests/**/*" = ["D", "ANN", "S101", "T20", "PLR2004"]
"migrations/*" = ["ALL"]
"**/__init__.py" = ["D104", "F401"]
"bot/__main__.py" = ["S104"]  # разрешаем bind 0.0.0.0 в лаунчере
"scripts/*" = ["T20"]         # скриптам можно print