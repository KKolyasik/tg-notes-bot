volumes:
  pg-data:
  redis_data:

services:
  postgres:
    image: postgres:16
    container_name: pg_container
    env_file:
      - .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
  
  redis:
    image: redis:latest
    container_name: redis_container
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$REDIS_PASSWORD\" ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    volumes:
      - redis_data:/data
  
  web_picker:
    image: kkolyasik/web_picker:latest
    env_file:
      - .env
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  
  migrator:
    image: kkolyasik/bot:latest
    env_file:
      - .env
    command: alembic upgrade head
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
  
  bot:
    image: kkolyasik/bot:latest
    env_file:
      - .env
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  
  celery_beat:
    image: kkolyasik/bot:latest
    env_file:
      - .env
    command: celery -A bot.celery.main.app beat -l INFO
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  
  celery_worker:
    image: kkolyasik/bot:latest
    env_file:
      - .env
    command: celery -A bot.celery.main.app worker -l INFO -Q reminders,maintenance --concurrency=4
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully