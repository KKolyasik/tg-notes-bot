services:

  postgres:
    image: postgres:16
    container_name: pg_container
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis_container
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$REDIS_PASSWORD\" ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  web_picker:
    build:
      context: .
      dockerfile: Dockerfile.picker
    env_file: .env
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - redis

  migrator:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file: .env
    command: alembic upgrade head
    depends_on:
      - postgres
      - redis
  
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file: .env
    depends_on:
      - postgres
      - redis
      - migrator
  
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file: .env
    command: celery -A bot.celery.main.app beat -l INFO
    depends_on:
      - postgres
      - redis
      - migrator
  
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file: .env
    command: celery -A bot.celery.main.app worker -l INFO -P solo -Q reminders,maintenance --concurrency=4
    depends_on:
      - postgres
      - redis
      - migrator

volumes:
  pg-data:
  redis-data: