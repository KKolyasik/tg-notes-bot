"""Initial Schema

Revision ID: e5a47c5a09e3
Revises:
Create Date: 2025-09-19 21:23:11.158872

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e5a47c5a09e3"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("notes",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("title", sa.String(length=200), nullable=False),
    sa.Column("body", sa.Text(), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_table("users",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("tg_id", sa.Integer(), nullable=True),
    sa.Column("first_name", sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_tg_id"), "users", ["tg_id"], unique=True)
    op.create_table("reminders",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("note_id", sa.Integer(), nullable=False),
    sa.Column("user_id", sa.Integer(), nullable=False),
    sa.Column("chat_id", sa.BigInteger(), nullable=False),
    sa.Column("scheduled_at", sa.DateTime(timezone=True), nullable=False),
    sa.Column("status", sa.Enum("scheduled", "sent", "queued", name="reminder_status"), server_default="scheduled", nullable=False),
    sa.Column("celery_task_id", sa.String(), nullable=True),
    sa.Column("sent_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    sa.ForeignKeyConstraint(["note_id"], ["notes.id"], ondelete="CASCADE"),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
    sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reminders_chat_id"), "reminders", ["chat_id"], unique=False)
    op.create_index(op.f("ix_reminders_note_id"), "reminders", ["note_id"], unique=False)
    op.create_index(op.f("ix_reminders_scheduled_at"), "reminders", ["scheduled_at"], unique=False)
    op.create_index(op.f("ix_reminders_status"), "reminders", ["status"], unique=False)
    op.create_index(op.f("ix_reminders_user_id"), "reminders", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_reminders_user_id"), table_name="reminders")
    op.drop_index(op.f("ix_reminders_status"), table_name="reminders")
    op.drop_index(op.f("ix_reminders_scheduled_at"), table_name="reminders")
    op.drop_index(op.f("ix_reminders_note_id"), table_name="reminders")
    op.drop_index(op.f("ix_reminders_chat_id"), table_name="reminders")
    op.drop_table("reminders")
    op.drop_index(op.f("ix_users_tg_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("notes")
    # ### end Alembic commands ###
